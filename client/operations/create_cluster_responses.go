// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CreateClusterReader is a Reader for the CreateCluster structure.
type CreateClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateClusterOK creates a CreateClusterOK with default headers values
func NewCreateClusterOK() *CreateClusterOK {
	return &CreateClusterOK{}
}

/*CreateClusterOK handles this case with default header values.

OK indicates that the HTTP request was successful.
*/
type CreateClusterOK struct {
	ResponseCode int64
}

func (o *CreateClusterOK) Error() string {
	return fmt.Sprintf("[POST /clusters][%d] createClusterOK ", 200)
}

func (o *CreateClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header ResponseCode
	responseCode, err := swag.ConvertInt64(response.GetHeader("ResponseCode"))
	if err != nil {
		return errors.InvalidType("ResponseCode", "header", "int64", response.GetHeader("ResponseCode"))
	}
	o.ResponseCode = responseCode

	return nil
}

// NewCreateClusterBadRequest creates a CreateClusterBadRequest with default headers values
func NewCreateClusterBadRequest() *CreateClusterBadRequest {
	return &CreateClusterBadRequest{}
}

/*CreateClusterBadRequest handles this case with default header values.

BadRequest indicates that there was an error in
the HTTP request.
*/
type CreateClusterBadRequest struct {
	ResponseCode int64
}

func (o *CreateClusterBadRequest) Error() string {
	return fmt.Sprintf("[POST /clusters][%d] createClusterBadRequest ", 400)
}

func (o *CreateClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header ResponseCode
	responseCode, err := swag.ConvertInt64(response.GetHeader("ResponseCode"))
	if err != nil {
		return errors.InvalidType("ResponseCode", "header", "int64", response.GetHeader("ResponseCode"))
	}
	o.ResponseCode = responseCode

	return nil
}
